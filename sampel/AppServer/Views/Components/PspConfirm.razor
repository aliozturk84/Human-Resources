<div id="confirm" class="modal fade" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">

        <div class="modal-content rounded-3 shadow">
            <div class="modal-body p-4 text-center">
                <h5 class="mb-0">@Title</h5>
                <p class="mb-0">@Message</p>
            </div>
            <div class="modal-footer p-0 flex-nowrap">
                <button type="button" class="btn btn-lg btn-link fs-6 text-decoration-none col-6 py-3 m-0 rounded-0 border-end" @onclick="@CloseAsync"><strong>@Cancel</strong></button>
                <button type="button" class="btn btn-lg btn-link fs-6 text-decoration-none col-6 py-3 m-0 rounded-0" @onclick="@OnClickAsync">@Success</button>
            </div>
        </div>

    </div>
</div>

@inherits AppComponentBase
@inject IJSRuntime jsRuntime
@code {
    [Parameter]
    public RenderFragment Title { get; set; }

    [Parameter]
    public RenderFragment Message { get; set; }

    [Parameter]
    public RenderFragment Cancel { get; set; }

    [Parameter]
    public RenderFragment Success { get; set; }

    public async Task CloseAsync()
    {
        visible = false;
        await jsRuntime.ModalHideAsync("confirm");
    }

    public async Task<bool> OpenAsync()
    {
        visible = true;
        await jsRuntime.ModalShowAsync("confirm");
        await BlockAsync(() => visible);

        return result;
    }







    private bool result = false;
    private bool visible = false;
    private async Task OnClickAsync()
    {
        result = true;
        await CloseAsync();
    }
    protected override Task OnParametersSetAsync()
    {
        Title ??= (builder) => builder.AddContent(0, "Are you sure?");
        Message ??= (builder) => builder.AddContent(0, "The operation cannot be reversed!");

        Cancel ??= (builder) => builder.AddContent(0, "No thanks");
        Success ??= (builder) => builder.AddContent(0, "Yes, pleas");

        return base.OnParametersSetAsync();
    }

}
